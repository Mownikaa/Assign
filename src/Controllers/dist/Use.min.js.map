{"version":3,"sources":["Use.ts"],"names":["users","id","name","age","exports","getAllUsers","req","res","next","json","getUserById","user","find","Number","params","createUser","body","push","console","log","updateUser","update","userId","finduser","status","deleteUser","list","findIndex","splice","error"],"mappings":"mCAEA,IAAMA,MAAQ,CACV,CAAEC,GAAI,EAAGC,KAAM,SAAUC,IAAK,GAC9B,CAAEF,GAAI,EAAGC,KAAM,MAAOC,IAAK,GAC3B,CAAEF,GAAI,EAAGC,KAAM,UAAWC,IAAK,IAEpBC,QAAAC,YAAc,SACzBC,EACAC,EACAC,GAEAD,EAAIE,KAAKT,QAGEI,QAAAM,YAAc,SACzBJ,EACAC,EACAC,GAEA,IAAMG,EAAOX,MAAMY,KAAK,SAACD,GAAS,OAAAA,EAAKV,KAAOY,OAAOP,EAAIQ,OAAOb,MAChEM,EAAIE,KAAKE,IAEEP,QAAAW,WAAa,SAACT,EAAcC,EAAeC,GACtD,IAAMG,EAAOL,EAAIU,KACjBhB,MAAMiB,KAAKN,GACXO,QAAQC,IAAIR,GACZJ,EAAIE,KAAKE,IAGEP,QAAAgB,WAAa,SAACd,EAAcC,EAAeC,GACxD,IAAMa,EAASf,EAAIU,KACbM,EAAST,OAAOP,EAAIQ,OAAOb,IAC3BsB,EAAWvB,MAAMY,KAAK,SAACD,GAAS,OAAAA,EAAKV,KAAOqB,IAElD,GADAJ,QAAQC,IAAII,EAAU,WAClBA,EACF,OAAOhB,EAAIE,KAAK,iBAElBc,EAASrB,KAAOmB,EAAOnB,KACvBqB,EAASpB,IAAMkB,EAAOlB,IACtBe,QAAQC,IAAII,EAAU,SACtBhB,EAAIiB,OAAO,KAAKf,KAAKc,IAEVnB,QAAAqB,WAAa,SAACnB,EAAcC,EAAeC,GACtD,IAAMkB,EAAO1B,MAAM2B,UAAU,SAAChB,GAAS,OAAAA,EAAKV,KAAOY,OAAOP,EAAIQ,OAAOb,MACtE,GAAY,GAARyB,EAAW,CACI1B,MAAM4B,OAAOF,EAAM,GAErCnB,EAAIiB,OAAO,KAAKf,KAAKT,YAErBO,EAAIiB,OAAO,KAAKf,KAAK,CAAEoB,MAAO","file":"Use.min.js","sourcesContent":["import { NextFunction, Response, Request } from \"express\";\r\n\r\nconst users = [\r\n    { id: 1, name: \"Andrea\", age: 3 },\r\n    { id: 2, name: \"Tom\", age: 4 },\r\n    { id: 3, name: \"Gabriel\", age: 5 },\r\n  ];\r\n  export const getAllUsers = (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    res.json(users);\r\n  };\r\n\r\n  export const getUserById = (\r\n    req: Request,\r\n    res: Response,\r\n    next: NextFunction\r\n  ) => {\r\n    const user = users.find((user) => user.id === Number(req.params.id));\r\n    res.json(user);\r\n  };\r\n  export const createUser = (req: Request, res: Response, next: NextFunction) => {\r\n    const user = req.body;\r\n    users.push(user);\r\n    console.log(user)\r\n    res.json(user);\r\n  \r\n  };\r\n  export const updateUser = (req: Request, res: Response, next: NextFunction) => {\r\n  const update = req.body;\r\n  const userId = Number(req.params.id);\r\n  const finduser = users.find((user) => user.id === userId);\r\n  console.log(finduser, \"Before\");\r\n  if(!finduser){\r\n    return res.json(\"no user Found\")\r\n  }\r\n  finduser.name = update.name;\r\n  finduser.age = update.age;\r\n  console.log(finduser, \"After\");\r\n  res.status(200).json(finduser);\r\n};\r\nexport const deleteUser = (req: Request, res: Response, next: NextFunction) => {\r\n  const list = users.findIndex((user) => user.id === Number(req.params.id))\r\n if (list >= 0) {\r\n  let deletedUser = users.splice(list, 1);\r\n  //console.log(deletedUser, \"DELETED USER\");\r\n  res.status(200).json(users);\r\n} else {\r\n  res.status(404).json({ error: \"No user found!!\" });\r\n}\r\n};"]}